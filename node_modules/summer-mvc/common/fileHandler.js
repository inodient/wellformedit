exports.fileHandler = function(){

  this.uploadFile = function( req ){
    if( req.headers["content-type"] ){
      var i;
      var destDir = path.join( process.cwd() );

      for( i=1; i<arguments.length; i++ ){
        destDir = path.join( destDir, arguments[i].toString() );
        makeFolder( destDir );
      }

      console.log( "[fileHandler.js] destDir : " + destDir );

      var busboy = new Busboy({ headers: req.headers });

      busboy.on("file", function(fieldname, file, filename, encoding, mimetype) {
        var saveTo = path.join( destDir, filename);
        console.log( "[fileHandler.js] Uploading : " + saveTo);

        file.pipe(fs.createWriteStream(saveTo));
      });
      busboy.on("finish", function() {
        console.log( "[fileHandler.js] Upload complete" );
      });

      req.pipe(busboy);
    }
  }

  this.downloadFile = function( res, savedPath, savedFileName, originalFileName ){
    let fileSize, dest, mimeType;

    savedPath = path.join( process.cwd(), savedPath );

    dest = path.join( savedPath, savedFileName );
    mimeType = mime.lookup( dest );

    res.setHeader( "Content-disposition", "attachment; filename=" + originalFileName );
    res.setHeader( "Content-type", mimeType );

    return { "originalFileName" : originalFileName, "savedPath" : savedPath, "savedFileName" : savedFileName };
  }
}




function makeFolder( pathStr ){

  try{
    fs.accessSync( pathStr );
  } catch( err ) {
    console.log( "[fileHandler.js] [" + pathStr + "] disappears. Create Directory." );
    fs.mkdirSync( pathStr );
  }
}
